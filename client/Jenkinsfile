pipeline {
    agent {
        kubernetes {
            yaml '''
                apiVersion: v1
                kind: Pod
                spec:
                    containers:
                    - name: docker
                      image: docker:latest
                      resources:
                        requests:
                          memory: "100Mi"
                        limits:
                          memory: "200Mi"
                      command:
                      - cat
                      tty: true
                      volumeMounts:
                        - mountPath: /var/run/docker.sock
                          name: docker-sock
                    volumes:
                      - name: docker-sock
                        hostPath:
                          path: /var/run/docker.sock    
            '''
        }
    }
    environment {
        dockerhub_credentials_id="docker-credentials-id"
    }

    stages {
        stage('Checkout scm') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                container('docker') {
                    script {
                        docker.build("anuppoudel/library_project-frontend:${BUILD_NUMBER}", "./client")
                    }
                }
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                container('docker') {
                    script {
                        docker.withRegistry('https://registry.hub.docker.com', dockerhub_credentials_id) {
                            docker.image("anuppoudel/library_project-frontend:${BUILD_NUMBER}").push()
                        }
                    }
                }
            }
        }

    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
    }
}

